#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.120.2)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["SkySphere", "TestParticleEmitter", "PETest"]
    def "SkySphere" (
        active = true
        references = @SkySphere.usdz@
    )
    {
        float3 xformOp:scale = (1, 0.7, 1)
        float3 xformOp:translate = (0, 50, 0)

        over "SkySphere_mat"
        {
            asset inputs:SkySphere_Texture = @messageImage_1750556825797.jpg@
        }
    }

    def Xform "TestParticleEmitter"
    {
        float3 xformOp:scale = (20, 20, 20)
        float3 xformOp:translate = (1, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Volume"
                int64 burstCount = 100
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 1
                double emissionDurationVariation = 0
                token emitterShape = "Sphere"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isLocalFields = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 0
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.5, 0.5, 0.5)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnDeath"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 1
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 500
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 20
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.05
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (1, 1, 1, 0.07)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            token motionType = "Dynamic"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.5
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }
    }

    def RealityKitTimeline "PETest"
    {
        reorder nameChildren = ["Track3", "Track2", "Track"]
        def RealityKitTrack "Track2"
        {
            reorder nameChildren = ["Hide", "Transform_By"]
            def RealityKitAction "Transform_By"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 1.5
                uniform token info:id = "AFF10965-0F49-40F8-883C-5F3C3D355444"
                float3 position = (0.5, 0.5, -0.5)
                double startTime = 2.993767848559506
                rel target = </Root/TestParticleEmitter>

                def RealityKitStruct "timingFunction"
                {
                    token type = "easeInOut"
                }
            }
        }

        def RealityKitTrack "Track3"
        {
            reorder nameChildren = ["Enable_Entity", "Transform_By"]
            def RealityKitAction "Enable_Entity"
            {
                string actionKind = "enable"
                double duration = 0
                uniform token info:id = "65A285D3-7F7B-40E1-B7AB-E5EEC7CF5F0E"
                double startTime = 0
                rel target = </Root/TestParticleEmitter>
            }
        }

        def RealityKitTrack "Track"
        {
            def RealityKitAction "Hide"
            {
                string actionKind = "hide"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "D25E6F1B-AF08-44C4-A3DD-CAD340C634B5"
                double startTime = 3.2357626895685665
                rel target = </Root/TestParticleEmitter>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = </Root/OnAddedToScene>
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/PETest>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }
}

